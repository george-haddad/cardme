<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2009 Wolfgang Fahl BITPlan GmbH
  Author: Wolfgang Fahl
  Date: 2009-07-24
-->

<project name="cardme" default="all" basedir=".">
	<description>
		rfc2426 compatible VCard Java Interface
	</description>
	<!-- setup directories -->
	<property name="package.name" value="cardme" />
	<property name="project.dir" value="${user.dir}" />
	<property name="dist.dir" value="${project.dir}\jar" />
	<property name="doc.dir" value="${project.dir}/doc" />
	<property name="lib.dir" value="${project.dir}\lib" />
	<property name="source.dir" value="${project.dir}/src/" />
    <property name="tstsrc.dir" value="${project.dir}/test" />
	<property name="bin.dir" value="${project.dir}/bin" />
	<property name="manifestdir" value="${dist.dir}/META-INF" />
	<property name="manifest" value="${manifestdir}/MANIFEST.MF" />
	<property name="release.dir" value="release" />
	<property name="version" value="0.2.1" />
	<property name="dist.jar" value="${lib.dir}/${package.name}-${version}.jar" />

	<!-- compiler settings -->
    <property name="debug" value="on" />
    <property name="deprecation" value="off" />
    <property name="optimize" value="off" />

    <property name="build.dir" value="bin" />
    <property name="build.classes" value="${build.dir}" />
    <property name="test.classes" value="${build.dir}" />
    <property name="test.class" value="info.ineighborhood.cardme.CardmeSuite" />


	<!-- all targets -->
	<target name="all" depends="test,release" description="do everything">
	</target>


	<!-- classpath for vcard Jar -->
	<path id="vcard.classpath">
		<fileset dir="${lib.dir}">
			<include name="mime-dir-j-2.1.0-1.jar" />
			<include name="junit-3.8.1.jar" />
		</fileset>
	</path>

	<!--  ===================================================================  -->
	<!--  Compiles the source code                                             -->
	<!--  ===================================================================  -->
	<target name="compile" >
	    <mkdir dir="${build.classes}" />
	    <javac srcdir="${source.dir}" destdir="${build.classes}"
	           debug="${debug}" deprecation="${deprecation}" optimize="${optimize}">
	        <classpath refid="vcard.classpath" />
	    </javac>
	</target>

	<!--  ===================================================================  -->
	<!--  Compiles the test code                                               -->
	<!--  ===================================================================  -->
	<target name="testcompile" depends="compile">
	    <mkdir dir="${test.classes}" />
	    <javac srcdir="${tstsrc.dir}" destdir="${test.classes}"
	           debug="on" deprecation="off" optimize="off">
	        <classpath>
	            <path refid="vcard.classpath" />
	        </classpath>
	    </javac>
	</target>


	<!--  ===================================================================  -->
	<!--  Generate the Javadoc documentation                                   -->
	<!--  ===================================================================  -->
	<target name="javadoc" description="create the java documentation">
		<property name="needed.jars" refid="vcard.classpath" />
		<property name="srcpackages" value="info.ineighborhood.cardme,info.ineighborhood.cardme.impl,info.ineighborhood.cardme.io,info.ineighborhood.cardme.parser,info.ineighborhood.cardme.parser.impl,info.ineighborhood.types,info.ineighborhood.cardme.util" />
		<!-- <property name="mimepackages" value="org.ietf.mimedir,org.ietf.mimedir.impl"/> 
		, ${mimepackages}-->
		<property name="allpackages" value="${srcpackages}" />
		<!-- stylesheetfile="${machine.root}/Source/Vorlagen/BITPlan_stylesheet.css" -->
		<javadoc access="private" author="true" destdir="${doc.dir}/api" source="1.5" header="cardme ${version}" windowtitle="cardme ${version}" packagenames="${allpackages}" classpath="${needed.jars};${bin.dir}" sourcepath="${source.dir}" splitindex="true" use="true" version="true" />
	</target>


	<!--  ===================================================================  -->
	<!--  Create a manifest file for the cardme jar                            -->
	<!--  ===================================================================  -->
	<target name="manifest" description="create manifest file">
		<antcall target="manifest.create" inheritRefs="true">
			<param name="manifestdir" value="${manifestdir}" />
			<param name="title" value="cardme VCard Java Interface" />
			<param name="version" value="0.2.1" />
			<param name="mainclass" value="info.ineighborhood.cardme.parser.impl.TestParser" />
			<param name="classpath" value="vcard.classpath" />
		</antcall>
	</target>


	<!--  ===================================================================  -->
	<!--  Create a manifest file with parameters                               -->
	<!--  ===================================================================  -->
	<target name="manifest.create">
		<mkdir dir="${manifestdir}" />
		<!-- remove absolute references from classpath -->
		<echo>"filtering ${lib.dir} from classpath" </echo>
		<pathconvert property="manifest.classpath" pathsep=" ">
			<path refid="${classpath}" />
			<!-- this mapper would strip all directory info
				<flattenmapper/> -->
			<chainedmapper>
				<!--
				<filtermapper>
					<replacestring from="\" to="/" />
				</filtermapper> -->
				<filtermapper>
					<replacestring from="${lib.dir}\" to="" />
				</filtermapper>
			</chainedmapper>
		</pathconvert>
		<echo>manifest classpath used:${manifest.classpath}</echo>
		<manifest file="${manifest}">
			<attribute name="Manifest-Version" value="1.0" />
			<attribute name="Specification-Title" value="${title}" />
			<attribute name="Specification-Vendor" value="Cardme Open Source Project" />
			<attribute name="Specification-Version" value="${version}" />
			<attribute name="Implementation-Title" value="${title}" />
			<attribute name="Implementation-Version" value="${version}" />
			<attribute name="Implementation-Vendor" value="Cardme Open Source Project" />
			<attribute name="Main-Class" value="${mainclass}" />
			<attribute name="Class-Path" value="${manifest.classpath}" />
		</manifest>
	</target>
	

	<!--  ===================================================================  -->
	<!--  Runs the test code                                                   -->
	<!--  ===================================================================  -->
	<target name="test" depends="testcompile" description="run JUnit Test Suite tests">
	    <java classname="${test.class}" fork="yes" >
	         <classpath>
	             <path refid="vcard.classpath" />
	             <pathelement location="META-INF" />
	             <pathelement location="${test.classes}" />
	         </classpath>
	    </java>
	</target>

	<!--  ===================================================================  -->
	<!--  Creates the jar file                                                 -->
	<!--  ===================================================================  -->
	<target name="jar" depends="manifest" description="create jar">
		<jar destfile="${dist.jar}" manifest="${manifest}" includes="**/*.class,**/*.png" basedir="bin" />
		<echo>Rebuilt ${dist.jar} for ${user.name}</echo>
	</target>

	<!--  ===================================================================  -->
	<!--  Creates the release files for the current version                    -->
	<!--  ===================================================================  -->
	<target name="release" depends="jar,javadoc" description="create release files">
		<mkdir dir="${release.dir}" />
		<copy file="${dist.jar}" todir="${release.dir}" verbose="true" preservelastmodified="true" />
		<zip destfile="${release.dir}/${package.name}-doc-${version}.zip"
		       basedir="${doc.dir}"
		       update="true"
		  />
		<zip destfile="${release.dir}/${package.name}-src-${version}.zip"
		       basedir="${source.dir}"
		       update="true"
		  />
	</target>

</project>
